<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>zooshop-producer-service</artifactId>
  <build>
    <plugins>
      <plugin>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <groupId>org.springframework.boot</groupId>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <artifactId>mapstruct-processor</artifactId>
              <groupId>org.mapstruct</groupId>
              <version>${version.mapstruct}</version>
            </path>
            <path>
              <artifactId>lombok</artifactId>
              <groupId>org.projectlombok</groupId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <groupId>org.projectlombok</groupId>
              <version>${version.lombok-mapstruct-binding}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>
      <plugin>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <id>prepare-agent</id>
          </execution>
          <execution>
            <configuration>
              <excludes>
                <exclude>ru/otus/group202205/homework/spring19/*Application.class</exclude>
                <exclude>ru/otus/group202205/homework/spring19/model/*.class</exclude>
                <exclude>ru/otus/group202205/homework/spring19/dao/DaoConfig.class</exclude>
                <exclude>ru/otus/group202205/homework/spring19/service/ServiceConfig.class</exclude>
                <exclude>ru/otus/group202205/homework/spring19/test/*.class</exclude>
              </excludes>
              <includes>
                <include>ru/otus/group202205/homework/spring19/**/*.class</include>
              </includes>
            </configuration>
            <goals>
              <goal>report</goal>
            </goals>
            <id>report</id>
          </execution>

          <execution>
            <configuration>
              <excludes>
                <exclude>ru/otus/group202205/homework/spring19/*Application.class</exclude>
                <exclude>ru/otus/group202205/homework/spring19/model/*.class</exclude>
                <exclude>ru/otus/group202205/homework/spring19/dao/DaoConfig.class</exclude>
                <exclude>ru/otus/group202205/homework/spring19/service/ServiceConfig.class</exclude>
                <exclude>ru/otus/group202205/homework/spring19/test/*.class</exclude>
              </excludes>
              <haltOnFailure>true</haltOnFailure>
              <includes>
                <include>ru/otus/group202205/homework/spring19/**/*.class</include>
              </includes>
              <rules>
                <rule>
                  <rule>
                    <element>CLASS</element>
                    <limits>
                      <limit>
                        <counter>LINE</counter>
                        <minimum>${test.class.line.coverage.level}</minimum>
                        <value>COVEREDRATIO</value>
                      </limit>
                    </limits>
                  </rule>
                </rule>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>CLASS</counter>
                      <maximum>${test.class.missed.level}</maximum>
                      <value>MISSEDCOUNT</value>
                    </limit>
                    <limit>
                      <counter>BRANCH</counter>
                      <minimum>${test.class.branch.coverage.level}</minimum>
                      <value>COVEREDRATIO</value>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
            <id>test-result-check</id>
          </execution>
        </executions>
        <groupId>org.jacoco</groupId>
        <version>${version.maven.plugin.jacoco}</version>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-config-client</artifactId>
      <groupId>org.springframework.cloud</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
      <groupId>org.springframework.cloud</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
      <groupId>org.springframework.cloud</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-devtools</artifactId>
      <groupId>org.springframework.boot</groupId>
      <optional>true</optional>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <artifactId>slf4j-api</artifactId>
      <groupId>org.slf4j</groupId>
    </dependency>
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
    </dependency>
    <dependency>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <groupId>io.micrometer</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>liquibase-core</artifactId>
      <groupId>org.liquibase</groupId>
    </dependency>
    <dependency>
      <artifactId>h2</artifactId>
      <groupId>com.h2database</groupId>
    </dependency>
    <dependency>
      <artifactId>mapstruct</artifactId>
      <groupId>org.mapstruct</groupId>
      <version>${version.mapstruct}</version>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
      <groupId>org.springframework.cloud</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>springdoc-openapi-ui</artifactId>
      <groupId>org.springdoc</groupId>
      <version>${version.spring.openapi-ui}</version>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <artifactId>spring-cloud-dependencies</artifactId>
        <groupId>org.springframework.cloud</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>${version.spring-cloud}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <version>2.7.5</version>
  </parent>
  <properties>
    <java.version>11</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <test.class.branch.coverage.level>0.50</test.class.branch.coverage.level>
    <test.class.line.coverage.level>1.00</test.class.line.coverage.level>
    <test.class.missed.level>0</test.class.missed.level>
    <version.lombok-mapstruct-binding>0.2.0</version.lombok-mapstruct-binding>
    <version.mapstruct>1.5.3.Final</version.mapstruct>
    <version.maven.plugin.compiler>3.8.1</version.maven.plugin.compiler>
    <version.maven.plugin.jacoco>0.8.8</version.maven.plugin.jacoco>
    <version.spring-cloud>2021.0.5</version.spring-cloud>
    <version.spring.openapi-ui>1.6.13</version.spring.openapi-ui>
  </properties>
  <version>1.0.0</version>
</project>